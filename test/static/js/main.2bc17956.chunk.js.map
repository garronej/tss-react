{"version":3,"sources":["../../../../../dist/esm/tools/polyfills/Object.fromEntries.js","../../../../../dist/esm/tools/objectKeys.js","../../../../../dist/esm/tools/assert.js","../../../../../dist/esm/tools/typeGuard.js","../../../../../dist/esm/tools/classnames.js","../../../../../dist/esm/types.js","../../../../../dist/esm/cssAndCx.js","../../../../../dist/esm/tools/useGuaranteedMemo.js","../../../../../dist/esm/tools/getDependencyArrayRef.js","../../../../../dist/esm/mergeClasses.js","../../../../../dist/esm/mui/themeStyleOverridesPlugin.js","../../../../../dist/esm/makeStyles.js","../../../../../dist/esm/tools/capitalize.js","../../../../../dist/esm/withStyles.js","../../../../../dist/esm/tools/isSSR.js","../../../../../dist/esm/tss.js","../../../../../dist/esm/GlobalStyles.js","../../../../../dist/esm/index.js","makeStyles.ts","App.tsx","index.tsx"],"names":["objectFromEntries","Object","fromEntries","entries","Symbol","iterator","Error","o","keys","forEach","key","k","v","objectKeys","assert","condition","msg","typeGuard","_value","isMatched","classnames","args","len","length","i","cls","arg","toAdd","Array","isArray","matchCSSObject","merge","registered","css","className","registeredStyles","rawClassName","getRegisteredStyles","createCssAndCx","params","cache","serialized","serializeStyles","insertStyles","name","increaseSpecificityToTakePrecedenceOverMediaQueries","saveClassNameCSSObjectMapping","cx","feat27FixedClassnames","fixClassName","createUseCssAndCx","useCache","useCssAndCx","fn","deps","_a","ref","useRef","current","prevDeps","map","indexOf","useGuaranteedMemo","cssObjectMapByCache","WeakMap","cssObject","cssObjectMap","get","undefined","Map","set","classNameCSSObjects","isThereAnyMediaQueriesInPreviousClasses","out","startsWith","fix","split","classNameOrCSSObject","getDependencyArrayRef","obj","arr","value","typeofValue","isNaN","push","join","mergeClasses","classesFromUseStyles","classesOverrides","ruleName","counter","createMakeStyles","useTheme","cacheProvidedAtInception","createUseCache","makeStyles","nameOrWrappedName","uniqId","cssObjectByRuleNameOrGetCssObjectByRuleName","getCssObjectByRuleName","muiStyleOverridesParams","theme","classes","useMemo","refClassesCache","refClasses","Proxy","_target","propertyKey","cssObjectByRuleName","label","propsClasses","props","pluginResultWrap","_b","styleOverrides","components","_c","classesFromThemeStyleOverrides","themeClasses","cssObjectOrGetCssObject","ownerState","useMuiThemeStyleOverridesPlugin","useStyles","reactContext","createContext","contextualCache","useContextualCache","cacheExplicitlyProvidedForTss","useContext","cacheToBeUsed","capitalize","str","charAt","toUpperCase","slice","fixedClassesByClasses","errorMessageGetClasses","getClasses","classesIn","incorporateMediaQueries","cssObjectByRuleNameWithMediaQueries","cssObjectByRuleNameWithMediaQueriesByMediaQuery","ruleNameOrMediaQuery","mediaQuery","cssObjectByRuleNameBis","isSSR","isBrowser","document","getElementById","isJest","jest","isMocha","mocha","isVitest","__vitest_worker__","nestedSelectorUsageTrackRecord","createTss_internal","usePlugin","doesUseNestedSelectors","idOfUseStyles","wrap","find","splice","paramsAndPluginParams","context","classesOverridesRef","paramsAndPluginParamsRef","mapCache_in","mapCache","mapCache_in_in","mapCache_in_in_in","entry","context_i","result","has","size","clear","threshold","runGetClassesOrUseCache","Set","nestedSelectorRuleNames","add","hasPotentialConflict","GlobalStyles","styles","React","createElement","reactEmotion","tss","createTss","create","withStyles","Component","Component_","tag","Out","children","defineProperty","displayName","functionName","replace","getHasNonRootClasses","forwardRef","rest","rootClassName","root","createWithStyles","H1","styled","App","ovStyled","Button","variant","color","ovInternal","parent","child","Breadcrumbs","breadcrumbs_className","style","breadcrumbs2_root","breadcrumbs2_separator","MyBreadcrumbs","button2_className","button2_root","testCx_bgYellow","testCx_bgCyan","childRefTest_wrapper","childRefTest_textColorPink","childRefTest_wrapper1","childRefTest_wrapper2","mq","colorSmall","MyStyledButton","MyAnchorStyled","href","lightBulbBorderColor","StyledTab","icon","TestWithStylesWithClassComponents","isBig","_params","palette","primary","main","MyComponentStyled","_props","separator","SecondNestedSelectorExample","memo","small","MyTestComponentForMergedClasses","MyTestComponentForMergedClassesInternal","foo","bar","TestCastingMuiTypographyStyleToCSSObject","typography","subtitle2","Typography","TestPr54","CustomInputBase","InputBase","grey","TestingStyleOverrides","useReducer","isOn","toggleIsOn","lightBulb","onClick","Tab","MyComponent","this","span","muiCache","createCache","createTheme","info","Root","createRoot","render","CssBaseline"],"mappings":"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","file":"static/js/main.2bc17956.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const objectFromEntries = !Object\n    .fromEntries\n    ? (entries) => {\n        if (!entries || !entries[Symbol.iterator]) {\n            throw new Error(\"Object.fromEntries() requires a single iterable argument\");\n        }\n        const o = {};\n        Object.keys(entries).forEach(key => {\n            const [k, v] = entries[key];\n            o[k] = v;\n        });\n        return o;\n    }\n    : Object.fromEntries;\n","/** Object.keys() with types */\nexport function objectKeys(o) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return Object.keys(o);\n}\n","/** https://docs.tsafe.dev/assert */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/** https://docs.tsafe.dev/typeguard */\nexport function typeGuard(_value, isMatched) {\n    return isMatched;\n}\n","import { assert } from \"./assert\";\nimport { typeGuard } from \"./typeGuard\";\n/** Copy pasted from\n * https://github.com/emotion-js/emotion/blob/23f43ab9f24d44219b0b007a00f4ac681fe8712e/packages/react/src/class-names.js#L17-L63\n **/\nexport const classnames = (args) => {\n    const len = args.length;\n    let i = 0;\n    let cls = \"\";\n    for (; i < len; i++) {\n        const arg = args[i];\n        if (arg == null)\n            continue;\n        let toAdd;\n        switch (typeof arg) {\n            case \"boolean\":\n                break;\n            case \"object\": {\n                if (Array.isArray(arg)) {\n                    toAdd = classnames(arg);\n                }\n                else {\n                    assert(!typeGuard(arg, false));\n                    if (process.env.NODE_ENV !== \"production\" &&\n                        arg.styles !== undefined &&\n                        arg.name !== undefined) {\n                        console.error(\"You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n\" +\n                            \"`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.\");\n                    }\n                    toAdd = \"\";\n                    for (const k in arg) {\n                        if (arg[k] && k) {\n                            toAdd && (toAdd += \" \");\n                            toAdd += k;\n                        }\n                    }\n                }\n                break;\n            }\n            default: {\n                toAdd = arg;\n            }\n        }\n        if (toAdd) {\n            cls && (cls += \" \");\n            cls += toAdd;\n        }\n    }\n    return cls;\n};\n","export function matchCSSObject(arg) {\n    return (arg instanceof Object &&\n        !(\"styles\" in arg) &&\n        !(\"length\" in arg) &&\n        !(\"__emotion_styles\" in arg));\n}\n","import { classnames } from \"./tools/classnames\";\nimport { serializeStyles } from \"@emotion/serialize\";\nimport { insertStyles, getRegisteredStyles } from \"@emotion/utils\";\nimport { useGuaranteedMemo } from \"./tools/useGuaranteedMemo\";\nimport { matchCSSObject } from \"./types\";\nexport const { createCssAndCx } = (() => {\n    function merge(registered, css, className) {\n        const registeredStyles = [];\n        const rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n        if (registeredStyles.length < 2) {\n            return className;\n        }\n        return rawClassName + css(registeredStyles);\n    }\n    function createCssAndCx(params) {\n        const { cache } = params;\n        const css = (...args) => {\n            const serialized = serializeStyles(args, cache.registered);\n            insertStyles(cache, serialized, false);\n            const className = `${cache.key}-${serialized.name}`;\n            scope: {\n                const arg = args[0];\n                if (!matchCSSObject(arg)) {\n                    break scope;\n                }\n                increaseSpecificityToTakePrecedenceOverMediaQueries.saveClassNameCSSObjectMapping(cache, className, arg);\n            }\n            return className;\n        };\n        const cx = (...args) => {\n            const className = classnames(args);\n            const feat27FixedClassnames = increaseSpecificityToTakePrecedenceOverMediaQueries.fixClassName(cache, className, css);\n            return merge(cache.registered, css, feat27FixedClassnames);\n            //return merge(cache.registered, css, className);\n        };\n        return { css, cx };\n    }\n    return { createCssAndCx };\n})();\nexport function createUseCssAndCx(params) {\n    const { useCache } = params;\n    function useCssAndCx() {\n        const cache = useCache();\n        const { css, cx } = useGuaranteedMemo(() => createCssAndCx({ cache }), [cache]);\n        return { css, cx };\n    }\n    return { useCssAndCx };\n}\n// https://github.com/garronej/tss-react/issues/27\nconst increaseSpecificityToTakePrecedenceOverMediaQueries = (() => {\n    const cssObjectMapByCache = new WeakMap();\n    return {\n        \"saveClassNameCSSObjectMapping\": (cache, className, cssObject) => {\n            let cssObjectMap = cssObjectMapByCache.get(cache);\n            if (cssObjectMap === undefined) {\n                cssObjectMap = new Map();\n                cssObjectMapByCache.set(cache, cssObjectMap);\n            }\n            cssObjectMap.set(className, cssObject);\n        },\n        \"fixClassName\": (() => {\n            function fix(classNameCSSObjects) {\n                let isThereAnyMediaQueriesInPreviousClasses = false;\n                return classNameCSSObjects.map(([className, cssObject]) => {\n                    if (cssObject === undefined) {\n                        return className;\n                    }\n                    let out;\n                    if (!isThereAnyMediaQueriesInPreviousClasses) {\n                        out = className;\n                        for (const key in cssObject) {\n                            if (key.startsWith(\"@media\")) {\n                                isThereAnyMediaQueriesInPreviousClasses = true;\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        out = {\n                            \"&&\": cssObject\n                        };\n                    }\n                    return out;\n                });\n            }\n            return (cache, className, css) => {\n                const cssObjectMap = cssObjectMapByCache.get(cache);\n                return classnames(fix(className\n                    .split(\" \")\n                    .map(className => [\n                    className,\n                    cssObjectMap === null || cssObjectMap === void 0 ? void 0 : cssObjectMap.get(className)\n                ])).map(classNameOrCSSObject => typeof classNameOrCSSObject === \"string\"\n                    ? classNameOrCSSObject\n                    : css(classNameOrCSSObject)));\n            };\n        })()\n    };\n})();\n","import { useRef } from \"react\";\n/** Like react's useMemo but with guarantee that the fn\n * won't be invoked again if deps hasn't change */\nexport function useGuaranteedMemo(fn, deps) {\n    var _a;\n    const ref = useRef();\n    if (!ref.current ||\n        deps.length !== ((_a = ref.current.prevDeps) === null || _a === void 0 ? void 0 : _a.length) ||\n        ref.current.prevDeps.map((v, i) => v === deps[i]).indexOf(false) >= 0) {\n        ref.current = {\n            \"v\": fn(),\n            \"prevDeps\": [...deps]\n        };\n    }\n    return ref.current.v;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * useEffect(\n *    ()=> { ... },\n *    [ { \"foo\": \"bar\" } ]\n * )\n * => The callback will be invoked every render.\n * because { \"foo\": \"bar\" } is a new instance every render.\n *\n * useEffect(\n *    ()=> { ... },\n *    [ getDependencyArrayRef({ \"foo\": \"bar\" }) ]\n * );\n * => The callback will only be invoked once.\n *\n * The optimization will be enabled only if obj is\n * of the form Record<string, string | number | undefined | null>\n * otherwise the object is returned (the function is the identity function).\n */\nexport function getDependencyArrayRef(obj) {\n    if (!(obj instanceof Object) || typeof obj === \"function\") {\n        return obj;\n    }\n    const arr = [];\n    for (const key in obj) {\n        const value = obj[key];\n        const typeofValue = typeof value;\n        if (!(typeofValue === \"string\" ||\n            (typeofValue === \"number\" && !isNaN(value)) ||\n            typeofValue === \"boolean\" ||\n            value === undefined ||\n            value === null)) {\n            return obj;\n        }\n        arr.push(`${key}:${typeofValue}_${value}`);\n    }\n    return \"xSqLiJdLMd9s\" + arr.join(\"|\");\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { objectKeys } from \"./tools/objectKeys\";\nexport function mergeClasses(classesFromUseStyles, classesOverrides, cx) {\n    //NOTE: We use this test to be resilient in case classesOverrides is not of the expected type.\n    if (!(classesOverrides instanceof Object)) {\n        return classesFromUseStyles;\n    }\n    const out = {};\n    objectKeys(classesFromUseStyles).forEach(ruleName => (out[ruleName] = cx(classesFromUseStyles[ruleName], classesOverrides[ruleName])));\n    objectKeys(classesOverrides).forEach(ruleName => {\n        if (ruleName in classesFromUseStyles) {\n            return;\n        }\n        const className = classesOverrides[ruleName];\n        //...Same here, that why we don't do className === undefined\n        if (typeof className !== \"string\") {\n            return;\n        }\n        out[ruleName] = className;\n    });\n    return out;\n}\n","import { useMemo } from \"react\";\nimport { getDependencyArrayRef } from \"../tools/getDependencyArrayRef\";\nimport { mergeClasses } from \"../mergeClasses\";\nexport const useMuiThemeStyleOverridesPlugin = ({ classes, theme, muiStyleOverridesParams, css, cx, name }) => {\n    var _a, _b;\n    require_named: {\n        // NOTE: Hack for backwards compatibility with the makeStyles API.\n        if (name === \"makeStyle no name\") {\n            name = undefined;\n            break require_named;\n        }\n        if (muiStyleOverridesParams !== undefined && name === undefined) {\n            throw new Error(\"To use muiStyleOverridesParams, you must specify a name using .withName('MyComponent')\");\n        }\n    }\n    let styleOverrides = undefined;\n    try {\n        styleOverrides =\n            name === undefined\n                ? undefined\n                : ((_b = (_a = theme.components) === null || _a === void 0 ? void 0 : _a[name /*example*/]) === null || _b === void 0 ? void 0 : _b.styleOverrides) || undefined;\n        // eslint-disable-next-line no-empty\n    }\n    catch (_c) { }\n    const classesFromThemeStyleOverrides = useMemo(() => {\n        if (styleOverrides === undefined) {\n            return undefined;\n        }\n        const themeClasses = {};\n        for (const ruleName in styleOverrides) {\n            const cssObjectOrGetCssObject = styleOverrides[ruleName];\n            if (!(cssObjectOrGetCssObject instanceof Object)) {\n                continue;\n            }\n            themeClasses[ruleName] = css(typeof cssObjectOrGetCssObject === \"function\"\n                ? cssObjectOrGetCssObject({\n                    theme,\n                    \"ownerState\": muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.ownerState,\n                    ...muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.props\n                })\n                : cssObjectOrGetCssObject);\n        }\n        return themeClasses;\n    }, [\n        styleOverrides,\n        getDependencyArrayRef(muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.props),\n        getDependencyArrayRef(muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.ownerState),\n        css\n    ]);\n    classes = useMemo(() => mergeClasses(classes, classesFromThemeStyleOverrides, cx), [classes, classesFromThemeStyleOverrides, cx]);\n    return { classes };\n};\n","\"use client\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useMemo } from \"react\";\nimport { objectFromEntries } from \"./tools/polyfills/Object.fromEntries\";\nimport { objectKeys } from \"./tools/objectKeys\";\nimport { createUseCssAndCx } from \"./cssAndCx\";\nimport { getDependencyArrayRef } from \"./tools/getDependencyArrayRef\";\nimport { typeGuard } from \"./tools/typeGuard\";\nimport { assert } from \"./tools/assert\";\nimport { mergeClasses } from \"./mergeClasses\";\nimport { createContext, useContext } from \"react\";\nimport { useMuiThemeStyleOverridesPlugin } from \"./mui/themeStyleOverridesPlugin\";\nimport { __unsafe_useEmotionCache as useContextualCache } from \"@emotion/react\";\nlet counter = 0;\nexport function createMakeStyles(params) {\n    const { useTheme, cache: cacheProvidedAtInception } = params;\n    const { useCache } = createUseCache({ cacheProvidedAtInception });\n    const { useCssAndCx } = createUseCssAndCx({ useCache });\n    /** returns useStyle. */\n    function makeStyles(params) {\n        const { name: nameOrWrappedName, uniqId = `${counter++}` } = params !== null && params !== void 0 ? params : {};\n        const name = typeof nameOrWrappedName !== \"object\"\n            ? nameOrWrappedName\n            : Object.keys(nameOrWrappedName)[0];\n        return function (cssObjectByRuleNameOrGetCssObjectByRuleName) {\n            const getCssObjectByRuleName = typeof cssObjectByRuleNameOrGetCssObjectByRuleName ===\n                \"function\"\n                ? cssObjectByRuleNameOrGetCssObjectByRuleName\n                : () => cssObjectByRuleNameOrGetCssObjectByRuleName;\n            return function useStyles(params, muiStyleOverridesParams) {\n                const theme = useTheme();\n                let { css, cx } = useCssAndCx();\n                const cache = useCache();\n                let classes = useMemo(() => {\n                    const refClassesCache = {};\n                    const refClasses = typeof Proxy !== \"undefined\" &&\n                        new Proxy({}, {\n                            \"get\": (_target, propertyKey) => {\n                                if (typeof propertyKey === \"symbol\") {\n                                    assert(false);\n                                }\n                                return (refClassesCache[propertyKey] = `${cache.key}-${uniqId}${name !== undefined ? `-${name}` : \"\"}-${propertyKey}-ref`);\n                            }\n                        });\n                    const cssObjectByRuleName = getCssObjectByRuleName(theme, params, refClasses || {});\n                    const classes = objectFromEntries(objectKeys(cssObjectByRuleName).map(ruleName => {\n                        const cssObject = cssObjectByRuleName[ruleName];\n                        if (!cssObject.label) {\n                            cssObject.label = `${name !== undefined ? `${name}-` : \"\"}${ruleName}`;\n                        }\n                        return [\n                            ruleName,\n                            `${css(cssObject)}${typeGuard(ruleName, ruleName in refClassesCache)\n                                ? ` ${refClassesCache[ruleName]}`\n                                : \"\"}`\n                        ];\n                    }));\n                    objectKeys(refClassesCache).forEach(ruleName => {\n                        if (ruleName in classes) {\n                            return;\n                        }\n                        classes[ruleName] =\n                            refClassesCache[ruleName];\n                    });\n                    return classes;\n                }, [cache, css, cx, theme, getDependencyArrayRef(params)]);\n                {\n                    const propsClasses = muiStyleOverridesParams === null || muiStyleOverridesParams === void 0 ? void 0 : muiStyleOverridesParams.props.classes;\n                    classes = useMemo(() => mergeClasses(classes, propsClasses, cx), [classes, getDependencyArrayRef(propsClasses), cx]);\n                }\n                {\n                    const pluginResultWrap = useMuiThemeStyleOverridesPlugin({\n                        classes,\n                        css,\n                        cx,\n                        \"name\": name !== null && name !== void 0 ? name : \"makeStyle no name\",\n                        \"idOfUseStyles\": uniqId,\n                        muiStyleOverridesParams,\n                        // NOTE: If it's not a Mui Theme the plugin is resilient, it will not crash\n                        \"theme\": theme\n                    });\n                    if (pluginResultWrap.classes !== undefined) {\n                        classes = pluginResultWrap.classes;\n                    }\n                    if (pluginResultWrap.css !== undefined) {\n                        css = pluginResultWrap.css;\n                    }\n                    if (pluginResultWrap.cx !== undefined) {\n                        cx = pluginResultWrap.cx;\n                    }\n                }\n                return {\n                    classes,\n                    theme,\n                    css,\n                    cx\n                };\n            };\n        };\n    }\n    function useStyles() {\n        const theme = useTheme();\n        const { css, cx } = useCssAndCx();\n        return { theme, css, cx };\n    }\n    return { makeStyles, useStyles };\n}\nconst reactContext = createContext(undefined);\nexport function TssCacheProvider(props) {\n    const { children, value } = props;\n    return (React.createElement(reactContext.Provider, { value: value }, children));\n}\nexport const { createUseCache } = (() => {\n    function useCacheProvidedByProvider() {\n        const cacheExplicitlyProvidedForTss = useContext(reactContext);\n        return cacheExplicitlyProvidedForTss;\n    }\n    function createUseCache(params) {\n        const { cacheProvidedAtInception } = params;\n        function useCache() {\n            var _a;\n            const contextualCache = useContextualCache();\n            const cacheExplicitlyProvidedForTss = useCacheProvidedByProvider();\n            const cacheToBeUsed = (_a = cacheProvidedAtInception !== null && cacheProvidedAtInception !== void 0 ? cacheProvidedAtInception : cacheExplicitlyProvidedForTss) !== null && _a !== void 0 ? _a : contextualCache;\n            if (cacheToBeUsed === null) {\n                throw new Error([\n                    \"In order to get SSR working with tss-react you need to explicitly provide an Emotion cache.\",\n                    \"MUI users be aware: This is not an error strictly related to tss-react, with or without tss-react,\",\n                    \"MUI needs an Emotion cache to be provided for SSR to work.\",\n                    \"Here is the MUI documentation related to SSR setup: https://mui.com/material-ui/guides/server-rendering/\",\n                    \"TSS provides helper that makes the process of setting up SSR easier: https://docs.tss-react.dev/ssr\"\n                ].join(\"\\n\"));\n            }\n            return cacheToBeUsed;\n        }\n        return { useCache };\n    }\n    return { createUseCache };\n})();\n","/** @see <https://docs.tsafe.dev/capitalize> */\nexport function capitalize(str) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (str.charAt(0).toUpperCase() + str.slice(1));\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { forwardRef, createElement } from \"react\";\nimport { createMakeStyles } from \"./makeStyles\";\nimport { capitalize } from \"./tools/capitalize\";\nexport function createWithStyles(params) {\n    const { useTheme, cache } = params;\n    const { makeStyles } = createMakeStyles({ useTheme, cache });\n    function withStyles(Component, cssObjectByRuleNameOrGetCssObjectByRuleName, params) {\n        const Component_ = typeof Component === \"string\"\n            ? (() => {\n                const tag = Component;\n                const Out = function ({ children, ...props }) {\n                    return createElement(tag, props, children);\n                };\n                Object.defineProperty(Out, \"name\", {\n                    \"value\": capitalize(tag)\n                });\n                return Out;\n            })()\n            : Component;\n        /**\n         * Get component name for wrapping\n         * @see https://reactjs.org/docs/higher-order-components.html#convention-wrap-the-display-name-for-easy-debugging\n         */\n        const name = (() => {\n            {\n                const { name: nameOrWrappedName } = params !== null && params !== void 0 ? params : {};\n                if (nameOrWrappedName !== undefined) {\n                    return typeof nameOrWrappedName !== \"object\"\n                        ? nameOrWrappedName\n                        : Object.keys(nameOrWrappedName)[0];\n                }\n            }\n            let name = undefined;\n            displayName: {\n                const displayName = Component_.displayName;\n                if (typeof displayName !== \"string\" || displayName === \"\") {\n                    break displayName;\n                }\n                name = displayName;\n            }\n            functionName: {\n                if (name !== undefined) {\n                    break functionName;\n                }\n                const functionName = Component_.name;\n                if (typeof functionName !== \"string\" || functionName === \"\") {\n                    break functionName;\n                }\n                name = functionName;\n            }\n            if (name === undefined) {\n                return undefined;\n            }\n            // Special case for dollar sign\n            name = name.replace(/\\$/g, \"usd\");\n            // Replacing open and close parentheses\n            name = name.replace(/\\(/g, \"_\").replace(/\\)/g, \"_\");\n            // Catch-all replacement for characters not allowed in CSS class names\n            name = name.replace(/[^a-zA-Z0-9-_]/g, \"_\");\n            return name;\n        })();\n        const useStyles = makeStyles({ ...params, name })(typeof cssObjectByRuleNameOrGetCssObjectByRuleName === \"function\"\n            ? (theme, props, classes) => incorporateMediaQueries(cssObjectByRuleNameOrGetCssObjectByRuleName(theme, props, classes))\n            : incorporateMediaQueries(cssObjectByRuleNameOrGetCssObjectByRuleName));\n        function getHasNonRootClasses(classes) {\n            for (const name in classes) {\n                if (name === \"root\") {\n                    continue;\n                }\n                return true;\n            }\n            return false;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const Out = forwardRef(function (props, ref) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { className, classes: _classes, ...rest } = props;\n            const { classes, cx } = useStyles(props, { props });\n            const rootClassName = cx(classes.root, className);\n            fixedClassesByClasses.set(classes, {\n                ...classes,\n                \"root\": rootClassName\n            });\n            return (React.createElement(Component_, { ref: ref, className: getHasNonRootClasses(classes)\n                    ? className\n                    : rootClassName, ...(typeof Component === \"string\" ? {} : { classes }), ...rest }));\n        });\n        if (name !== undefined) {\n            Out.displayName = `${capitalize(name)}WithStyles`;\n            Object.defineProperty(Out, \"name\", { \"value\": Out.displayName });\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return Out;\n    }\n    withStyles.getClasses = getClasses;\n    return { withStyles };\n}\nconst fixedClassesByClasses = new WeakMap();\nconst errorMessageGetClasses = \"getClasses should only be used in conjunction with withStyles\";\nfunction getClasses(props) {\n    const classesIn = props.classes;\n    if (classesIn === undefined) {\n        throw new Error(errorMessageGetClasses);\n    }\n    const classes = fixedClassesByClasses.get(classesIn);\n    if (classes === undefined) {\n        throw new Error(errorMessageGetClasses);\n    }\n    return classes;\n}\nfunction incorporateMediaQueries(cssObjectByRuleNameWithMediaQueries) {\n    const cssObjectByRuleName = {};\n    const cssObjectByRuleNameWithMediaQueriesByMediaQuery = {};\n    Object.keys(cssObjectByRuleNameWithMediaQueries).forEach(ruleNameOrMediaQuery => ((ruleNameOrMediaQuery.startsWith(\"@media\")\n        ? cssObjectByRuleNameWithMediaQueriesByMediaQuery\n        : cssObjectByRuleName)[ruleNameOrMediaQuery] =\n        cssObjectByRuleNameWithMediaQueries[ruleNameOrMediaQuery]));\n    Object.keys(cssObjectByRuleNameWithMediaQueriesByMediaQuery).forEach(mediaQuery => {\n        const cssObjectByRuleNameBis = cssObjectByRuleNameWithMediaQueriesByMediaQuery[mediaQuery];\n        Object.keys(cssObjectByRuleNameBis).forEach(ruleName => {\n            var _a;\n            return (cssObjectByRuleName[ruleName] = {\n                ...((_a = cssObjectByRuleName[ruleName]) !== null && _a !== void 0 ? _a : {}),\n                [mediaQuery]: cssObjectByRuleNameBis[ruleName]\n            });\n        });\n    });\n    return cssObjectByRuleName;\n}\n","export const isSSR = (() => {\n    const isBrowser = typeof document === \"object\" &&\n        typeof (document === null || document === void 0 ? void 0 : document.getElementById) === \"function\";\n    // Check for common testing framework global variables\n    const isJest = typeof jest !== \"undefined\";\n    const isMocha = typeof mocha !== \"undefined\";\n    const isVitest = typeof __vitest_worker__ !== \"undefined\";\n    return !isBrowser && !isJest && !isMocha && !isVitest;\n})();\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { createUseCache } from \"./makeStyles\";\nimport { createUseCssAndCx } from \"./cssAndCx\";\nimport { assert } from \"./tools/assert\";\nimport { objectFromEntries } from \"./tools/polyfills/Object.fromEntries\";\nimport { objectKeys } from \"./tools/objectKeys\";\nimport { typeGuard } from \"./tools/typeGuard\";\nimport { getDependencyArrayRef } from \"./tools/getDependencyArrayRef\";\nimport { mergeClasses } from \"./mergeClasses\";\nimport { isSSR } from \"./tools/isSSR\";\nexport function createTss(params) {\n    counter = 0;\n    nestedSelectorUsageTrackRecord.splice(0, nestedSelectorUsageTrackRecord.length);\n    const { useContext, usePlugin, cache: cacheProvidedAtInception } = params;\n    const { useCache } = createUseCache({ cacheProvidedAtInception });\n    const { useCssAndCx } = createUseCssAndCx({ useCache });\n    const usePluginDefault = ({ classes, cx, css }) => ({ classes, cx, css });\n    const tss = createTss_internal({\n        useContext,\n        useCache,\n        useCssAndCx,\n        \"usePlugin\": usePlugin !== null && usePlugin !== void 0 ? usePlugin : usePluginDefault,\n        \"name\": undefined,\n        \"doesUseNestedSelectors\": false\n    });\n    return { tss };\n}\nlet counter = 0;\nconst nestedSelectorUsageTrackRecord = [];\nfunction createTss_internal(params) {\n    const { useContext, useCache, useCssAndCx, usePlugin, name, doesUseNestedSelectors } = params;\n    return {\n        \"withParams\": () => createTss_internal({ ...params }),\n        \"withName\": nameOrWrappedName => createTss_internal({\n            ...params,\n            \"name\": typeof nameOrWrappedName !== \"object\"\n                ? nameOrWrappedName\n                : Object.keys(nameOrWrappedName)[0]\n        }),\n        \"withNestedSelectors\": () => createTss_internal({\n            ...params,\n            \"doesUseNestedSelectors\": true\n        }),\n        \"create\": (cssObjectByRuleNameOrGetCssObjectByRuleName) => {\n            // NOTE: Not isomorphic. Not guaranteed to be the same on client and server.\n            // Do not attempt to 'simplify' the code without taking this fact into account.\n            const idOfUseStyles = `x${counter++}`;\n            // NOTE: Cleanup for hot module reloading.\n            if (name !== undefined) {\n                // eslint-disable-next-line no-constant-condition\n                while (true) {\n                    const wrap = nestedSelectorUsageTrackRecord.find(wrap => wrap.name === name);\n                    if (wrap === undefined) {\n                        break;\n                    }\n                    nestedSelectorUsageTrackRecord.splice(nestedSelectorUsageTrackRecord.indexOf(wrap), 1);\n                }\n            }\n            const getCssObjectByRuleName = typeof cssObjectByRuleNameOrGetCssObjectByRuleName ===\n                \"function\"\n                ? cssObjectByRuleNameOrGetCssObjectByRuleName\n                : () => cssObjectByRuleNameOrGetCssObjectByRuleName;\n            return function useStyles(params) {\n                var _a, _b, _c;\n                const { classesOverrides, ...paramsAndPluginParams } = (params !== null && params !== void 0 ? params : {});\n                const context = useContext();\n                const { css, cx } = useCssAndCx();\n                const cache = useCache();\n                const getClasses = () => {\n                    const refClassesCache = {};\n                    // @ts-expect-error: Type safety non achievable.\n                    const cssObjectByRuleName = getCssObjectByRuleName({\n                        ...params,\n                        ...context,\n                        ...(!doesUseNestedSelectors\n                            ? {}\n                            : {\n                                \"classes\": typeof Proxy === \"undefined\"\n                                    ? {}\n                                    : new Proxy({}, {\n                                        \"get\": (_target, ruleName) => {\n                                            /* prettier-ignore */\n                                            if (typeof ruleName === \"symbol\") {\n                                                assert(false);\n                                            }\n                                            if (isSSR &&\n                                                name === undefined) {\n                                                throw new Error([\n                                                    `tss-react: In SSR setups, in order to use nested selectors, you must also give a unique name to the useStyle function.`,\n                                                    `Solution: Use tss.withName(\"ComponentName\").withNestedSelectors<...>()... to set a name.`\n                                                ].join(\"\\n\"));\n                                            }\n                                            update_nested_selector_usage_track_record: {\n                                                if (name === undefined) {\n                                                    break update_nested_selector_usage_track_record;\n                                                }\n                                                /* prettier-ignore */\n                                                let wrap = nestedSelectorUsageTrackRecord.find(wrap => wrap.name === name && wrap.idOfUseStyles === idOfUseStyles);\n                                                /* prettier-ignore */\n                                                if (wrap === undefined) {\n                                                    /* prettier-ignore */\n                                                    wrap = { name, idOfUseStyles, \"nestedSelectorRuleNames\": new Set() };\n                                                    /* prettier-ignore */\n                                                    nestedSelectorUsageTrackRecord.push(wrap);\n                                                }\n                                                /* prettier-ignore */\n                                                wrap.nestedSelectorRuleNames.add(ruleName);\n                                            }\n                                            detect_potential_conflicts: {\n                                                if (name === undefined) {\n                                                    break detect_potential_conflicts;\n                                                }\n                                                const hasPotentialConflict = nestedSelectorUsageTrackRecord.find(wrap => wrap.name ===\n                                                    name &&\n                                                    wrap.idOfUseStyles !==\n                                                        idOfUseStyles &&\n                                                    wrap.nestedSelectorRuleNames.has(ruleName)) !== undefined;\n                                                if (!hasPotentialConflict) {\n                                                    break detect_potential_conflicts;\n                                                }\n                                                throw new Error([\n                                                    `tss-react: There are in your codebase two different useStyles named \"${name}\" that`,\n                                                    `both use use the nested selector ${ruleName}.\\n`,\n                                                    `This may lead to CSS class name collisions, causing nested selectors to target elements outside of the intended scope.\\n`,\n                                                    `Solution: Ensure each useStyles using nested selectors has a unique name.\\n`,\n                                                    `Use: tss.withName(\"UniqueName\").withNestedSelectors<...>()...`\n                                                ].join(\" \"));\n                                            }\n                                            /* prettier-ignore */\n                                            return (refClassesCache[ruleName] = `${cache.key}-${name !== undefined ? name : idOfUseStyles}-${ruleName}-ref`);\n                                        }\n                                    })\n                            })\n                    });\n                    let classes = objectFromEntries(objectKeys(cssObjectByRuleName).map(ruleName => {\n                        const cssObject = cssObjectByRuleName[ruleName];\n                        if (!cssObject.label) {\n                            cssObject.label = `${name !== undefined ? `${name}-` : \"\"}${ruleName}`;\n                        }\n                        return [\n                            ruleName,\n                            `${css(cssObject)}${typeGuard(ruleName, ruleName in refClassesCache)\n                                ? ` ${refClassesCache[ruleName]}`\n                                : \"\"}`\n                        ];\n                    }));\n                    objectKeys(refClassesCache).forEach(ruleName => {\n                        if (ruleName in classes) {\n                            return;\n                        }\n                        classes[ruleName] =\n                            refClassesCache[ruleName];\n                    });\n                    classes = mergeClasses(classes, classesOverrides, cx);\n                    return classes;\n                };\n                const classes = runGetClassesOrUseCache({\n                    cache,\n                    cssObjectByRuleNameOrGetCssObjectByRuleName,\n                    \"classesOverridesRef\": getDependencyArrayRef(classesOverrides),\n                    \"paramsAndPluginParamsRef\": getDependencyArrayRef(paramsAndPluginParams),\n                    idOfUseStyles,\n                    context,\n                    getClasses\n                });\n                // @ts-expect-error: Type safety non achievable.\n                const pluginResultWrap = usePlugin({\n                    classes,\n                    css,\n                    cx,\n                    idOfUseStyles,\n                    name,\n                    ...context,\n                    ...paramsAndPluginParams\n                });\n                return {\n                    \"classes\": (_a = pluginResultWrap.classes) !== null && _a !== void 0 ? _a : classes,\n                    \"css\": (_b = pluginResultWrap.css) !== null && _b !== void 0 ? _b : css,\n                    \"cx\": (_c = pluginResultWrap.cx) !== null && _c !== void 0 ? _c : cx,\n                    ...context\n                };\n            };\n        }\n    };\n}\nconst mapCache = new WeakMap();\nfunction runGetClassesOrUseCache(params) {\n    const { cache, cssObjectByRuleNameOrGetCssObjectByRuleName, classesOverridesRef, paramsAndPluginParamsRef, idOfUseStyles, context, getClasses } = params;\n    use_cache: {\n        const mapCache_in = mapCache.get(cache);\n        if (mapCache_in === undefined) {\n            break use_cache;\n        }\n        const mapCache_in_in = mapCache_in.get(cssObjectByRuleNameOrGetCssObjectByRuleName);\n        if (mapCache_in_in === undefined) {\n            break use_cache;\n        }\n        const mapCache_in_in_in = mapCache_in_in.get(classesOverridesRef);\n        if (mapCache_in_in_in === undefined) {\n            break use_cache;\n        }\n        const arr = mapCache_in_in_in.get(paramsAndPluginParamsRef);\n        if (arr === undefined) {\n            break use_cache;\n        }\n        const entry = arr.find(({ context: context_i }) => {\n            if (context_i === context) {\n                return true;\n            }\n            if (objectKeys(context_i).length !== objectKeys(context).length) {\n                return false;\n            }\n            for (const key in context_i) {\n                if (getDependencyArrayRef(context_i[key]) !==\n                    getDependencyArrayRef(context[key])) {\n                    return false;\n                }\n            }\n            return true;\n        });\n        if (entry === undefined) {\n            break use_cache;\n        }\n        if ((entry === null || entry === void 0 ? void 0 : entry.idOfUseStyles) !== idOfUseStyles) {\n            arr.splice(arr.indexOf(entry), 1);\n            break use_cache;\n        }\n        return entry.result;\n    }\n    const result = getClasses();\n    {\n        if (!mapCache.has(cache)) {\n            mapCache.set(cache, new WeakMap());\n        }\n        const mapCache_in = mapCache.get(cache);\n        assert(mapCache_in !== undefined);\n        if (!mapCache_in.has(cssObjectByRuleNameOrGetCssObjectByRuleName)) {\n            mapCache_in.set(cssObjectByRuleNameOrGetCssObjectByRuleName, new Map());\n        }\n        const mapCache_in_in = mapCache_in.get(cssObjectByRuleNameOrGetCssObjectByRuleName);\n        assert(mapCache_in_in !== undefined);\n        if (!mapCache_in_in.has(classesOverridesRef)) {\n            if (mapCache_in_in.size > 200) {\n                mapCache_in_in.clear();\n            }\n            mapCache_in_in.set(classesOverridesRef, new Map());\n        }\n        const mapCache_in_in_in = mapCache_in_in.get(classesOverridesRef);\n        assert(mapCache_in_in_in !== undefined);\n        if (!mapCache_in_in_in.has(paramsAndPluginParamsRef)) {\n            clear_cache: {\n                const threshold = typeof paramsAndPluginParamsRef === \"string\" ? 257 : 5;\n                if (mapCache_in_in_in.size < threshold) {\n                    break clear_cache;\n                }\n                mapCache_in_in_in.clear();\n            }\n            mapCache_in_in_in.set(paramsAndPluginParamsRef, []);\n        }\n        let arr = mapCache_in_in_in.get(paramsAndPluginParamsRef);\n        assert(arr !== undefined);\n        if (arr.length > 5) {\n            arr = [];\n        }\n        arr.push({ idOfUseStyles, context, result });\n    }\n    return result;\n}\n","\"use client\";\nimport React from \"react\";\nimport * as reactEmotion from \"@emotion/react\";\nexport function GlobalStyles(props) {\n    const { styles } = props;\n    return React.createElement(reactEmotion.Global, { styles: reactEmotion.css(styles) });\n}\n","\"use client\";\nimport { createMakeStyles, TssCacheProvider } from \"./makeStyles\";\nexport { createMakeStyles, TssCacheProvider };\nimport { createWithStyles } from \"./withStyles\";\nexport { createWithStyles };\nimport { createTss } from \"./tss\";\nexport { createTss };\n/** @see <https://docs.tss-react.dev/api/keyframes> */\nexport { keyframes } from \"@emotion/react\";\n/** @see <https://docs.tss-react.dev/api/globalstyles> */\nexport { GlobalStyles } from \"./GlobalStyles\";\n/** @see <https://docs.tss-react.dev/api/makestyles> */\nexport function createMakeAndWithStyles(params) {\n    return {\n        ...createMakeStyles(params),\n        ...createWithStyles(params)\n    };\n}\nexport const { tss } = createTss({\n    \"useContext\": () => ({})\n});\nexport const useStyles = tss.create({});\n","\nimport { createMakeAndWithStyles } from \"tss-react\";\nimport { useTheme } from \"@mui/material/styles\";\n\nexport const { makeStyles, useStyles, withStyles } = createMakeAndWithStyles({ useTheme });\n","\nimport React, { useReducer, memo } from \"react\";\nimport { makeStyles, withStyles } from \"makeStyles\";\nimport { GlobalStyles } from \"tss-react\";\nimport { styled } from \"@mui/material\";\nimport Button from \"@mui/material/Button\"\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport type { CSSObject } from \"tss-react\";\nimport Typography from \"@mui/material/Typography\";\nimport InputBase from \"@mui/material/InputBase\";\nimport Tab from \"@mui/material/Tab\";\nimport PhoneIcon from \"@mui/icons-material/Phone\";\n\nconst H1 = styled('h1')({\n\t\"color\": \"yellow\"\n});\n\nexport function App(props: { className?: string; }) {\n\tconst { className } = props;\n\tconst { classes, css, cx } = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyles\n\t\t\t\tstyles={{\n\t\t\t\t\t\"body\": {\n\t\t\t\t\t\t\"backgroundColor\": \"pink\"\n\t\t\t\t\t},\n\t\t\t\t\t\".foo\": {\n\t\t\t\t\t\t\"color\": \"cyan\"\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<h1>Black</h1>\n\t\t\t\t<h1>Should be lime green</h1>\n\t\t\t\t<h1\n\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\tcss({ \"border\": \"1px solid black\" }),\n\t\t\t\t\t\tclassName\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\tBlack, should have border and shadow\n\t\t\t\t</h1>\n\t\t\t\t<h1 className=\"foo\">Should be cyan</h1>\n\t\t\t\t<H1>Should be yellow</H1>\n\t\t\t\t<H1 className={classes.ovStyled}>Should be dark red</H1>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\"> Background should be lime green </Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclassName={classes.ovInternal}\n\t\t\t\t>\n\t\t\t\t\tBackground should be dark blue\n\t\t\t\t</Button>\n\t\t\t\t<div className={classes.parent}>\n\t\t\t\t\t<div className={classes.child}>\n\t\t\t\t\t\tBackground should turn red when mouse is hover the parent.\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Breadcrumbs\n\t\t\t\t\tclassName={classes.breadcrumbs_className}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t>\n\t\t\t\t\t<span>background should be lightblue</span>\n\t\t\t\t\t<span>and the separator (/) should be red except when hover, then it is blue</span>\n\t\t\t\t</Breadcrumbs>\n\t\t\t\t<div style={{ \"height\": 10 }} />\n\t\t\t\t<Breadcrumbs\n\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\"root\": classes.breadcrumbs2_root,\n\t\t\t\t\t\t\"separator\": classes.breadcrumbs2_separator\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t>\n\t\t\t\t\t<span>background should be lightblue</span>\n\t\t\t\t\t<span>and the separator (/) should be red except when hover, then it is blue</span>\n\t\t\t\t</Breadcrumbs>\n\n\t\t\t\t<MyBreadcrumbs>\n\t\t\t\t\t<span>The separator</span>\n\t\t\t\t\t<span>should be lightgreen</span>\n\t\t\t\t</MyBreadcrumbs>\n\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclassName={classes.button2_className}\n\t\t\t\t>\n\t\t\t\t\t<span>The background should be red</span>\n\t\t\t\t</Button>\n\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclasses={{ \"root\": classes.button2_root, }}\n\t\t\t\t>\n\t\t\t\t\t<span>The background should be red</span>\n\t\t\t\t</Button>\n\t\t\t\t<div className={cx(classes.testCx_bgYellow, classes.testCx_bgCyan)}>\n\t\t\t\t\tBackground should be cyan\n\t\t\t\t</div>\n\t\t\t\t<div className={cx(classes.testCx_bgCyan, classes.testCx_bgYellow)}>\n\t\t\t\t\tBackground should be yellow\n\t\t\t\t</div>\n\n\n\n\t\t\t\t<div className={classes.childRefTest_wrapper}>\n\n\t\t\t\t\t<div className={cx(\n\t\t\t\t\t\tclasses.childRefTest_textColorPink,\n\t\t\t\t\t\tclasses.childRefTest_wrapper1\n\t\t\t\t\t)}>\n\t\t\t\t\t\tBackground should turn cyan when mouse hover the parent.\n\t\t\t\t\t\tAlso the text should NOT be pink\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={cx(classes.childRefTest_wrapper2)}>\n\t\t\t\t\t\tBackground should NOT turn cyan when mouse hover the parent.\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className={classes.mq}>\n\t\t\t\t\tThe background color should turn from lightgreen to cyan when the window\n\t\t\t\t\tinner with goes is below 960px\n\t\t\t\t</div>\n\n\t\t\t\t<MyComponentStyled\n\t\t\t\t\tclassName={css({ \"color\": \"red\" })}\n\t\t\t\t\tcolorSmall=\"cyan\"\n\t\t\t\t/>\n\t\t\t\t<MyStyledButton>\n\t\t\t\t\tThe text should turn from red to blue when the\n\t\t\t\t\twindow inner width goes below 960px\n\t\t\t\t\tAnd I should have a class like tss-xxxxxx-MyStyledButton-text\n\t\t\t\t</MyStyledButton>\n\t\t\t\t<br />\n\t\t\t\t<MyAnchorStyled href=\"http://exampe.com\">\n\t\t\t\t\tBackground should be red\n\t\t\t\t</MyAnchorStyled>\n\t\t\t\t<MyAnchorStyled href=\"https://exampe.com\">\n\t\t\t\t\tBackground should be limegreen\n\t\t\t\t</MyAnchorStyled>\n\t\t\t\t<div className={cx(\n\t\t\t\t\tcss({\n\t\t\t\t\t\t\"@media screen and (min-width: 1px)\": {\n\t\t\t\t\t\t\t\"backgroundColor\": \"red\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"height\": 50\n\t\t\t\t\t}),\n\t\t\t\t\tcss({\n\t\t\t\t\t\t\"backgroundColor\": \"lightgreen\"\n\t\t\t\t\t})\n\t\t\t\t)}>\n\t\t\t\t\tbackground should be lightgreen\n\t\t\t\t</div>\n\t\t\t\t<SecondNestedSelectorExample />\n\t\t\t\t<MyTestComponentForMergedClasses />\n\t\t\t\t<TestCastingMuiTypographyStyleToCSSObject />\n\t\t\t\t<TestPr54 />\n\t\t\t\t<TestingStyleOverrides\n\t\t\t\t\tclassName={css({ \"backgroundColor\": \"white\" })}\n\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\"root\": css({\n\t\t\t\t\t\t\t\"backgroundColor\": \"red\",\n\t\t\t\t\t\t\t\"border\": \"1px solid black\"\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\tlightBulbBorderColor=\"black\"\n\t\t\t\t/>\n\t\t\t\t<StyledTab icon={<PhoneIcon />} label=\"Background should be greenish\" />\n\t\t\t\t<TestWithStylesWithClassComponents isBig={true}/>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nconst useStyles = makeStyles<void, \"child\" | \"breadcrumbs2_separator\" | \"childRefTest_wrapper2\" | \"childRefTest_wrapper1\">({\n\t\"name\": { App },\n})((theme, _params, classes) => {\n\n\tconst childRefTest_wrapper2 = {\n\t\t\"border\": \"1px solid black\",\n\t\t\"margin\": 30,\n\t\t\"height\": 100,\n\t\t\"color\": \"black\"\n\t};\n\n\treturn {\n\t\t\"root\": {\n\t\t\t\"& > h1:nth-child(2)\": {\n\t\t\t\t\"color\": theme.palette.primary.main,\n\t\t\t}\n\t\t},\n\t\t\"ovStyled\": {\n\t\t\t\"color\": \"darkred\"\n\t\t},\n\t\t\"ovInternal\": {\n\t\t\t\"backgroundColor\": \"darkblue\"\n\t\t},\n\t\t\"parent\": {\n\t\t\t\"border\": \"1px solid black\",\n\t\t\t\"padding\": 30,\n\t\t\t[`&:hover .${classes.child}`]: {\n\t\t\t\t\"background\": \"red\",\n\t\t\t}\n\t\t},\n\t\t\"child\": {\n\t\t\t\"background\": \"blue\",\n\t\t\t\"border\": \"1px solid black\"\n\t\t},\n\t\t\"breadcrumbs_className\": {\n\t\t\t\"backgroundColor\": \"lightblue\",\n\t\t\t\"& .MuiBreadcrumbs-separator\": {\n\t\t\t\t\"color\": \"red\"\n\t\t\t},\n\t\t\t\"&:hover .MuiBreadcrumbs-separator\": {\n\t\t\t\t\"color\": \"blue\"\n\t\t\t}\n\t\t},\n\n\t\t\"breadcrumbs2_root\": {\n\t\t\t\"backgroundColor\": \"lightblue\",\n\t\t\t[`&:hover .${classes.breadcrumbs2_separator}`]: {\n\t\t\t\t\"color\": \"blue\"\n\t\t\t}\n\t\t},\n\t\t\"breadcrumbs2_separator\": {\n\t\t\t\"color\": \"red\"\n\t\t},\n\n\t\t\"button2_className\": {\n\t\t\t\"backgroundColor\": \"red\"\n\t\t},\n\n\t\t\"button2_root\": {\n\t\t\t\"backgroundColor\": \"red\"\n\t\t},\n\n\t\t\"testCx_bgYellow\": {\n\t\t\t\"backgroundColor\": \"yellow\"\n\t\t},\n\t\t\"testCx_bgCyan\": {\n\t\t\t\"backgroundColor\": \"cyan\"\n\t\t},\n\n\t\t\"childRefTest_wrapper\": {\n\t\t\t\"border\": \"1px solid black\",\n\t\t\t[`&:hover .${classes.childRefTest_wrapper1}`]: {\n\t\t\t\t\"backgroundColor\": \"cyan\"\n\t\t\t}\n\t\t},\n\t\t\"childRefTest_wrapper1\": {\n\t\t\t...childRefTest_wrapper2\n\t\t},\n\t\tchildRefTest_wrapper2,\n\t\t\"childRefTest_textColorPink\": {\n\t\t\t\"color\": \"pink\"\n\t\t},\n\t\t\"mq\": {\n\t\t\t\"height\": 100,\n\t\t\t\"backgroundColor\": \"lightgreen\",\n\t\t\t\"@media (max-width: 960px)\": {\n\t\t\t\t\"backgroundColor\": \"cyan\"\n\t\t\t}\n\t\t}\n\t};\n});\n\n\nfunction MyComponent(props: { className?: string; colorSmall: string; }) {\n    const classes = withStyles.getClasses(props);\n    return (\n        <div className={classes.root}>\n            The background color should turn from limegreen to cyan when the window\n            inner with goes below 960px.\n            Font should be red\n        </div>\n    );\n}\n\nconst MyComponentStyled = withStyles(\n\tMyComponent,\n\t(theme, props) => ({\n\t\t\"root\": {\n\t\t\t\"backgroundColor\": theme.palette.primary.main,\n\t\t\t\"height\": 100,\n\t\t\t\"marginTop\": 20\n\t\t},\n\t\t\"@media (max-width: 960px)\": {\n\t\t\t\"root\": {\n\t\t\t\t\"backgroundColor\": props.colorSmall\n\t\t\t},\n\t\t}\n\t})\n);\n\nconst MyStyledButton = withStyles(\n\tButton,\n\t{\n\t\t\"text\": {\n\t\t\t\"color\": \"red\",\n\t\t\t\"textTransform\": \"unset\"\n\t\t},\n\t\t\"@media (max-width: 960px)\": {\n\t\t\t\"text\": {\n\t\t\t\t\"color\": \"blue\"\n\t\t\t},\n\t\t}\n\t},\n\t{ \"name\": \"MyStyledButton\" }\n);\n\nconst MyAnchorStyled = withStyles(\n\t\"a\",\n\t(theme, { href }) => ({\n\t\t\"root\": {\n\t\t\t\"border\": \"1px solid black\",\n\t\t\t\"backgroundColor\":\n\t\t\t\thref?.startsWith(\"https\") ?\n\t\t\t\t\ttheme.palette.primary.main :\n\t\t\t\t\t\"red\"\n\t\t}\n\t})\n);\n\nconst MyBreadcrumbs = withStyles(\n\tBreadcrumbs,\n\t(theme, _props, classes) => ({\n\t\t\"ol\": {\n\t\t\t[`& .${classes.separator}`]: {\n\t\t\t\t\"color\": theme.palette.primary.main\n\t\t\t}\n\t\t}\n\t})\n);\n\nconst { SecondNestedSelectorExample } = (() => {\n\n\tconst SecondNestedSelectorExample = memo(() => {\n\n\t\tconst { classes, cx } = useStyles({ \"color\": \"primary\" });\n\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<div className={classes.child}>\n\t\t\t\t\tThe Background take the primary theme color when the mouse is hover the parent.\n\t\t\t\t</div>\n\t\t\t\t<div className={cx(classes.child, classes.small)}>\n\t\t\t\t\tThe Background take the primary theme color when the mouse is hover the parent.\n\t\t\t\t\tI am smaller than the other child.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t});\n\n\tconst useStyles = makeStyles<{ color: \"primary\" | \"secondary\" }, \"child\" | \"small\">({\n\t\t\"name\": { SecondNestedSelectorExample }\n\t})(\n\t\t(theme, { color }, classes) => ({\n\t\t\t\"root\": {\n\t\t\t\t\"padding\": 30,\n\t\t\t\t[`&:hover .${classes.child}`]: {\n\t\t\t\t\t\"backgroundColor\": theme.palette[color].main,\n\t\t\t\t},\n\t\t\t},\n\t\t\t\"small\": {},\n\t\t\t\"child\": {\n\t\t\t\t\"border\": \"1px solid black\",\n\t\t\t\t\"height\": 50,\n\t\t\t\t[`&.${classes.small}`]: {\n\t\t\t\t\t\"height\": 30,\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t);\n\n\treturn { SecondNestedSelectorExample };\n\n})()\n\nconst { MyTestComponentForMergedClasses } = (() => {\n\n\tconst useStyles = makeStyles()({\n\t\t\"foo\": {\n\t\t\t\"border\": \"3px dotted black\",\n\t\t\t\"backgroundColor\": \"red\"\n\t\t},\n\t\t\"bar\": {\n\t\t\t\"color\": \"pink\"\n\t\t}\n\t});\n\n\ttype Props = {\n\t\tclasses?: Partial<ReturnType<typeof useStyles>[\"classes\"]>;\n\t};\n\n\tconst MyTestComponentForMergedClassesInternal = (props: Props) => {\n\n\t\tconst { classes } = useStyles(undefined, { props });\n\n\t\treturn (\n\t\t\t<div className={classes.foo}>\n\t\t\t\t<span className={classes.bar}>The background should be green, the box should have a dotted border and the text should be pink</span>\n\t\t\t</div>\n\t\t);\n\n\t};\n\n\n\tconst MyTestComponentForMergedClasses = () => {\n\n\t\tconst { css } = useStyles();\n\n\t\treturn <MyTestComponentForMergedClassesInternal classes={{ \"foo\": css({ \"backgroundColor\": \"green\" }) }} />;\n\n\t};\n\n\treturn { MyTestComponentForMergedClasses };\n\n})();\n\nconst { TestCastingMuiTypographyStyleToCSSObject } = (() => {\n\n\tconst useStyles = makeStyles()(theme => ({\n\t\t\"root\": {\n\t\t\t...(theme.typography.subtitle2 as CSSObject),\n\t\t\t\"color\": \"red\"\n\t\t}\n\t}));\n\n\tconst TestCastingMuiTypographyStyleToCSSObject = () => {\n\n\t\tconst { classes } = useStyles();\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Typography variant=\"subtitle2\">This text should be italic</Typography>\n\t\t\t\t<span className={classes.root}>This text should be italic and red</span>\n\t\t\t</>\n\t\t);\n\n\t};\n\n\treturn { TestCastingMuiTypographyStyleToCSSObject };\n\n})();\n\nconst { TestPr54 } = (() => {\n\n\tconst CustomInputBase = withStyles(\n\t\tInputBase,\n\t\ttheme =>\n\t\t({\n\t\t\t\"input\": {\n\t\t\t\t\"backgroundColor\": theme.palette.grey[50],\n\t\t\t},\n\t\t} as const)\n\t);\n\n\tconst TestPr54 = withStyles(CustomInputBase, () => ({\n\t\t\"input\": {\n\t\t\t\"backgroundColor\": \"red\"\n\t\t},\n\t}));\n\n\treturn { TestPr54 };\n\n})();\n\nconst { TestingStyleOverrides } = (() => {\n\n\ttype Props = {\n\t\tclassName?: string;\n\t\tclasses?: Partial<ReturnType<typeof useStyles>[\"classes\"]>;\n\t\tlightBulbBorderColor: string;\n\t}\n\n\tfunction TestingStyleOverrides(props: Props) {\n\n\t\tconst { className } = props;\n\n\t\tconst [isOn, toggleIsOn] = useReducer(isOn => !isOn, false);\n\n\t\tconst { classes, cx } = useStyles(undefined, { props, \"ownerState\": { isOn } });\n\n\t\treturn (\n\t\t\t<div className={cx(classes.root, className)} >\n\t\t\t\t<div className={classes.lightBulb}></div>\n\t\t\t\t<button onClick={toggleIsOn}>{`Turn ${isOn ? \"off\" : \"on\"}`}</button>\n\t\t\t\t<p>Div should have a border, background should be white</p>\n\t\t\t\t<p>Light bulb should have black border, it should be yellow when turned on.</p>\n\t\t\t</div>\n\t\t);\n\n\t}\n\n\tconst useStyles = makeStyles({ \"name\": { TestingStyleOverrides } })(theme => ({\n\t\t\"root\": {\n\t\t\t\"border\": \"1px solid black\",\n\t\t\t\"width\": 500,\n\t\t\t\"height\": 200,\n\t\t\t\"position\": \"relative\",\n\t\t\t\"color\": \"black\"\n\t\t},\n\t\t\"lightBulb\": {\n\t\t\t\"position\": \"absolute\",\n\t\t\t\"width\": 50,\n\t\t\t\"height\": 50,\n\t\t\t\"top\": 120,\n\t\t\t\"left\": 500 / 2 - 50,\n\t\t\t\"borderRadius\": \"50%\"\n\t\t}\n\t}));\n\n\treturn { TestingStyleOverrides };\n\n})();\n\nconst StyledTab = withStyles(Tab, {\n\t\"root\": {\n\t\t\"backgroundColor\": \"red\"\n\t},\n\t\"labelIcon\": {\n\t\t\"backgroundColor\": \"green\"\n\t}\n});\n\nconst TestWithStylesWithClassComponents = (() => {\n\n\ttype Props = {\n\t\tclassName?: string;\n\t\tclasses?: Partial<Record<\"root\" | \"span\", string>>;\n\t\tisBig: boolean;\n\t};\n\n\tclass MyComponent extends React.Component<Props> {\n\t\trender() {\n\n\t\t\tconst classes = withStyles.getClasses(this.props)\n\n\t\t\treturn (\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<span className={classes.span}>Background color should be green on big screen, red on small screen, there is a black border on the text</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\tconst MyComponentStyled = withStyles(\n\t\tMyComponent,\n\t\t(theme, props) => ({\n\t\t\t\"root\": {\n\t\t\t\t\"backgroundColor\": theme.palette.primary.main,\n\t\t\t\t\"height\": props.isBig ? 200 : undefined\n\t\t\t},\n\t\t\t\"span\": {\n\t\t\t\t\"border\": \"1px solid black\"\n\t\t\t},\n\t\t\t\"@media (max-width: 960px)\": {\n\t\t\t\t\"root\": {\n\t\t\t\t\t\"backgroundColor\": \"red\"\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n\n\treturn MyComponentStyled;\n\n})();\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport { StrictMode } from \"react\";\n//NOTE: If makeStyles was located in src/app we would write: import { makeStyles } from \"app/makeStyles\";\nimport { useStyles } from \"makeStyles\";\nimport { App } from \"./App\";\nimport { CacheProvider } from \"@emotion/react\";\nimport { ThemeProvider as MuiThemeProvider } from \"@mui/material/styles\";\nimport { createTheme } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { createRoot } from \"react-dom/client\";\nimport createCache from \"@emotion/cache\";\n\nconst muiCache = createCache({\n    \"key\": \"mui\",\n    \"prepend\": true\n});\n\nconst theme = createTheme({\n    \"palette\": {\n        \"primary\": {\n            \"main\": \"#32CD32\" //Limegreen\n        },\n        \"info\": {\n            \"main\": \"#ffff00\" //Yellow\n        }\n    },\n    \"typography\": {\n        \"subtitle2\": {\n            \"fontStyle\": \"italic\"\n        }\n    },\n    \"components\": {\n        //@ts-ignore\n        \"TestingStyleOverrides\": {\n            \"styleOverrides\": {\n                \"lightBulb\": ({ theme, ownerState: { isOn }, lightBulbBorderColor }: any) => ({\n                    \"border\": `1px solid ${lightBulbBorderColor}`,\n                    \"backgroundColor\": isOn ? theme.palette.info.main : \"grey\"\n                })\n            }\n\n        }\n    }\n});\n\nfunction Root() {\n\n    const { css } = useStyles();\n\n    return <App className={css({ \"boxShadow\": \"10px 5px 5px teal\" })} />;\n\n}\n\ncreateRoot(document.getElementById(\"root\")!).render(\n    <StrictMode>\n        <CacheProvider value={muiCache}>\n            <MuiThemeProvider theme={theme}>\n                <CssBaseline />\n                <Root />\n            </MuiThemeProvider>\n        </CacheProvider>\n    </StrictMode>\n);\n"],"sourceRoot":""}